// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

enum Role{
  ADMIN
  USER
  MANAGER
}

enum Priority{
  LOW
  MEDIUM
  HIGH
}

enum taskStatus{
  IN_PROGRESS
  PENDING
  COMPLETED
  OVERDUE
}

enum Notification_type{
   NEW_TASK
   CREATE_USER
   TOGGLE_IN_PROGRESS
   TOGGLE_COMPLETED
   DELETE_TASK
   DELETE_USER
   UPDATE_USER
   UPDATE_TASK
   OVERDUE_TASK
}

enum userStatus {
  ACTIVE
  AWAY
}

model User{
  id     Int       @id @default(autoincrement())
  email  String    @unique
  password String
  fName   String
  lName   String 
  role   Role      @default(USER)
  tasks  Task[]   
  status userStatus @default(AWAY)
  deptId Int
  department Department? @relation(fields:[deptId], references:[id])
  Notifications  Notification[] 
}


model Notification {
   id       Int @id @default(autoincrement())
   type     Notification_type
   message  String
   isRead   Boolean @default(false)
   createdAt DateTime @default(now())
   userId    Int
   user      User @relation(fields: [userId], references: [id])
}

model Task {
  id           Int @id @default(autoincrement())
  title        String  @unique
  description  String
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  priority     Priority @default(MEDIUM)
  createdAt DateTime @default(now())
  dueDate      DateTime
  status       taskStatus  @default(PENDING)
  departmentId  Int
  department    Department  @relation(fields: [departmentId], references: [id])
}

model Department{
  id   Int @id @default(autoincrement())
  name  String
  tasks Task[]
  users User[] 
  }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
